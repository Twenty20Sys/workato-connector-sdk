# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/countries/all/countries.rbi
#
# countries-1.2.2

module Countries
end
module ISO3166
  def self.Country(country_data_or_country); end
end
class ISO3166::Setup
  def codes; end
  def data; end
end
class ISO3166::Data
  def call; end
  def initialize(alpha2); end
  def self.codes; end
  def self.datafile_path(file_array); end
  def self.load_cache; end
  def self.load_yaml(file_array); end
end
class ISO3166::Country
  def <=>(other); end
  def ==(other); end
  def address_format; end
  def alpha2; end
  def alpha3; end
  def alt_currency; end
  def continent; end
  def country_code; end
  def currency; end
  def currency_code; end
  def data; end
  def dissolved_on; end
  def eu_member; end
  def gec; end
  def in_eu?; end
  def initialize(country_data); end
  def international_prefix; end
  def ioc; end
  def languages; end
  def latitude; end
  def latitude_dec; end
  def local_name; end
  def local_names; end
  def longitude; end
  def longitude_dec; end
  def max_latitude; end
  def max_longitude; end
  def min_latitude; end
  def min_longitude; end
  def name; end
  def names; end
  def national_destination_code_lengths; end
  def national_number_lengths; end
  def national_prefix; end
  def nationality; end
  def number; end
  def postal_code; end
  def postal_code?; end
  def region; end
  def self.[](query); end
  def self.all(&blk); end
  def self.all_names_with_codes(locale = nil); end
  def self.all_translated(locale = nil); end
  def self.codes; end
  def self.countries(&blk); end
  def self.find_all_by(attribute, val); end
  def self.find_by(attribute, value, obj = nil); end
  def self.method_missing(*m); end
  def self.new(country_data); end
  def self.parse_attributes(attribute, val); end
  def self.search(query); end
  def self.translations(locale = nil); end
  def states; end
  def subdivisions; end
  def subdivisions?; end
  def subregion; end
  def to_s; end
  def translated_names; end
  def translation(locale = nil); end
  def translations; end
  def un_locode; end
  def valid?; end
  def vat_rates; end
  def world_region; end
  def zip; end
  def zip?; end
end
