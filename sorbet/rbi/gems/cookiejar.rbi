# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/cookiejar/all/cookiejar.rbi
#
# cookiejar-0.3.3

module CookieJar
end
class CookieJar::InvalidCookieError < StandardError
  def initialize(message); end
  def messages; end
end
module CookieJar::CookieValidation
  def self.compute_search_domains(request_uri); end
  def self.compute_search_domains_for_host(host); end
  def self.cookie_base_path(path); end
  def self.decode_value(value); end
  def self.determine_cookie_domain(request_uri, cookie_domain); end
  def self.determine_cookie_path(request_uri, cookie_path); end
  def self.domains_match(tested_domain, base_domain); end
  def self.effective_host(host_or_uri); end
  def self.hostname_reach(hostname); end
  def self.parse_set_cookie(set_cookie_value); end
  def self.parse_set_cookie2(set_cookie_value); end
  def self.to_domain(uri_or_domain); end
  def self.to_path(uri_or_path); end
  def self.to_uri(request_uri); end
  def self.validate_cookie(request_uri, cookie); end
  def self.value_to_string(value); end
end
module CookieJar::CookieValidation::PATTERN
  include URI::RFC2396_REGEXP::PATTERN
end
class CookieJar::Cookie
  def comment; end
  def comment_url; end
  def created_at; end
  def decoded_value; end
  def discard; end
  def domain; end
  def expired?(time = nil); end
  def expires_at; end
  def http_only; end
  def initialize(args); end
  def name; end
  def path; end
  def ports; end
  def secure; end
  def self.compute_search_domains(request_uri); end
  def self.from_set_cookie(request_uri, set_cookie_value); end
  def self.from_set_cookie2(request_uri, set_cookie_value); end
  def self.json_create(o); end
  def session?; end
  def should_send?(request_uri, script); end
  def to_hash; end
  def to_json(*a); end
  def to_s(ver = nil, prefix = nil); end
  def value; end
  def version; end
end
class CookieJar::Jar
  def add_cookie(cookie); end
  def add_cookie_to_path(paths, cookie); end
  def expire_cookies(session = nil); end
  def find_domain(host); end
  def find_or_add_domain_for_cookie(cookie); end
  def gather_header_values(http_header_value, &_block); end
  def get_cookie_header(request_uri, opts = nil); end
  def get_cookies(request_uri, opts = nil); end
  def initialize; end
  def self.from_a(cookies); end
  def self.json_create(o); end
  def set_cookie(request_uri, cookie_header_values); end
  def set_cookie2(request_uri, cookie_header_value); end
  def set_cookies_from_headers(request_uri, http_headers); end
  def to_a; end
  def to_json(*a); end
  def to_uri(request_uri); end
end
