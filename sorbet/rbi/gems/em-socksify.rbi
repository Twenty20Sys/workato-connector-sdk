# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/em-socksify/all/em-socksify.rbi
#
# em-socksify-0.3.2

module EventMachine
end
module EventMachine::Socksify
  def socks_hook; end
  def socks_receive_data(data); end
  def socks_unhook(ip = nil); end
  def socksify(host, port, username = nil, password = nil, version = nil, &blk); end
end
class EventMachine::Socksify::SOCKSError < Exception
  def self.define(message); end
  def self.for_response_code(code); end
end
class EventMachine::Socksify::SOCKSError::ServerFailure < EventMachine::Socksify::SOCKSError
  def initialize; end
end
class EventMachine::Socksify::SOCKSError::NotAllowed < EventMachine::Socksify::SOCKSError
  def initialize; end
end
class EventMachine::Socksify::SOCKSError::NetworkUnreachable < EventMachine::Socksify::SOCKSError
  def initialize; end
end
class EventMachine::Socksify::SOCKSError::HostUnreachable < EventMachine::Socksify::SOCKSError
  def initialize; end
end
class EventMachine::Socksify::SOCKSError::ConnectionRefused < EventMachine::Socksify::SOCKSError
  def initialize; end
end
class EventMachine::Socksify::SOCKSError::TTLExpired < EventMachine::Socksify::SOCKSError
  def initialize; end
end
class EventMachine::Socksify::SOCKSError::CommandNotSupported < EventMachine::Socksify::SOCKSError
  def initialize; end
end
class EventMachine::Socksify::SOCKSError::AddressTypeNotSupported < EventMachine::Socksify::SOCKSError
  def initialize; end
end
module EventMachine::Connectify
  def connect_hook; end
  def connect_receive_data(data); end
  def connect_unhook; end
  def connectify(host, port, username = nil, password = nil, &blk); end
end
class EventMachine::Connectify::CONNECTError < Exception
end
module EventMachine::Socksify::SOCKS5
  def socks_methods; end
  def socks_parse_response; end
  def socks_send_authentication; end
  def socks_send_connect_request; end
  def socks_send_handshake; end
end
module EventMachine::Connectify::CONNECT
  def connect_parse_response; end
  def connect_send_handshake; end
end
